<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>de.itsfullofstars</groupId>
	<artifactId>iotserver</artifactId>
	<version>1.0.0</version>
	<packaging>war</packaging>
	<name>HCP IoT demo server app </name>
	<url>https://github.com/tobiashofmann/fish-with-odata</url>

	<properties>
		<!-- SONAR -->
		<sonar.language>java</sonar.language>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<sap.cloud.sdk.path>${project.basedir}/sdk</sap.cloud.sdk.path>
		<sap.cloud.sdk.version>2.79.10.4</sap.cloud.sdk.version>
		<sap.cloud.sdk.plugin>neo-javaee6-wp-maven-plugin</sap.cloud.sdk.plugin>
		<sap.cloud.jdk.version>1.7</sap.cloud.jdk.version>
		<sap.cloud.host>hana.ondemand.com</sap.cloud.host>
		<sap.cloud.application>sample</sap.cloud.application>
		<local.server.root>${project.build.directory}/server</local.server.root>
		<local.server.host>localhost</local.server.host>
		<local.server.shutdown.port>7003</local.server.shutdown.port>
		<local.server.jmx.port>7004</local.server.jmx.port>
		<local.server.http.port>7080</local.server.http.port>
		<local.server.https.port>7443</local.server.https.port>
		<local.server.ajp.port>7009</local.server.ajp.port>
		<eclipselink.version>2.6.2</eclipselink.version>
		<version.jaxrs-api>2.0.1</version.jaxrs-api>
		<olingo.version>2.0.6</olingo.version>
		<version.cxf>2.7.6</version.cxf>
		<version.jaxrs-api>2.0-m10</version.jaxrs-api>
		<junit.version>4.12</junit.version>
	</properties>

	<dependencies>
		<!-- The SAP HANA Cloud Platform Java EE 6 Web Profile API -->
		<dependency>
			<groupId>com.sap.cloud</groupId>
			<artifactId>neo-javaee6-wp-api</artifactId>
			<version>${sap.cloud.sdk.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.sap.cloud</groupId>
			<artifactId>neo-java-web-maven-plugin</artifactId>
			<version>1.94.22</version>
		</dependency>
		<!-- EclipseLink -->
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>org.eclipse.persistence.jpa</artifactId>
			<version>${eclipselink.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>eclipselink</artifactId>
			<version>${eclipselink.version}</version>
		</dependency>
		<!-- Maven -->
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<version>3.5</version>
			<type>maven-plugin</type>
		</dependency>
		<!-- Olingo -->
		<dependency>
			<groupId>org.apache.olingo</groupId>
			<artifactId>olingo-odata2-jpa-processor-api</artifactId>
			<version>${olingo.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.olingo</groupId>
			<artifactId>olingo-odata2-api-annotation</artifactId>
			<version>${olingo.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.olingo</groupId>
			<artifactId>olingo-odata2-jpa-processor-core</artifactId>
			<version>${olingo.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.olingo</groupId>
			<artifactId>olingo-odata2-api</artifactId>
			<version>${olingo.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.olingo</groupId>
			<artifactId>olingo-odata2-core</artifactId>
			<version>${olingo.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.olingo</groupId>
			<artifactId>olingo-odata2-annotation-processor-api</artifactId>
			<version>${olingo.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.olingo</groupId>
			<artifactId>olingo-odata2-annotation-processor-core</artifactId>
			<version>${olingo.version}</version>
		</dependency>

		<!-- Additional dependencies -->

		<!-- Servlet/REST dependencies -->
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<version>${version.jaxrs-api}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxrs</artifactId>
			<version>${version.cxf}</version>
		</dependency>

		<!-- jUnit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
		</dependency>




	</dependencies>

	<build>
		<!-- Map the Eclipse file system layout to the Maven plug-ins -->
		<sourceDirectory>${project.basedir}/src</sourceDirectory>
		<testSourceDirectory>${project.basedir}/test</testSourceDirectory>
		<outputDirectory>${project.basedir}/war/WEB-INF/classes</outputDirectory>
		<testOutputDirectory>${project.basedir}/bin/classes</testOutputDirectory>
		<resources>
			<resource>
				<directory>${project.basedir}/src</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>${project.basedir}/test</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</testResource>
		</testResources>
		<plugins>

			<!-- Install the HCP SDK -->
			<plugin>
				<groupId>com.sap.cloud</groupId>				 
				<artifactId>neo-javaee6-wp-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>install-sdk</id>
						<phase>initialize</phase>
						<goals>
							<goal>install-sdk</goal>
						</goals>
					</execution>
					<execution>
                         <id>local-setup</id>
                         <phase>pre-integration-test</phase>
                         <goals>
                             <goal>install-local</goal>
                             <goal>deploy-local</goal>
                             <goal>start-local</goal>
                         </goals>
                     </execution>
                     <execution>
                         <id>local-teardown</id>
                         <phase>post-integration-test</phase>
                         <goals>
                             <goal>stop-local</goal>
                         </goals>
                     </execution>
				</executions>
				<configuration>
					<sdkInstallPath>${project.build.directory}/sdk</sdkInstallPath>
					<!-- Configuration for local server -->
                    <location>${project.build.directory}/sdk/server</location>
                     <!-- WAR of the application under test -->
                    <source>${project.build.directory}/${project.artifactId}.war</source>
                    <synchronous>true</synchronous>
                    <httpPort>${local.server.http.port}</httpPort>
                    <httpsPort>${local.server.https.port}</httpsPort>
                    <ajpPort>${local.server.ajp.port}</ajpPort>
                    <jmxPort>${local.server.jmx.port}</jmxPort>
                    <shutdownPort>${local.server.shutdown.port}</shutdownPort>
				</configuration>
			</plugin>
			<!-- Map the Eclipse file system layout to the Maven plug-ins -->
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<warName>${project.artifactId}</warName>
					<warSourceDirectory>WebContent</warSourceDirectory>
					<archive>
						<manifestFile>WebContent/META-INF/MANIFEST.MF</manifestFile>
					</archive>
				</configuration>
			</plugin>
			<!-- Set compiler to officially supported JDK version for the given SAP 
				HANA Cloud Platform SDK -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5</version>
				<configuration>
					<source>${sap.cloud.jdk.version}</source>
					<target>${sap.cloud.jdk.version}</target>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>
			<!-- Include only unit tests for maven-surefire-plugin that is run in 
				test phase -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12</version>
				<configuration>
					<excludes>
						<exclude>**/integrationtest/**/*Test.java</exclude>
					</excludes>
					<includes>
						<include>**/test/**/*Test.java</include>
					</includes>
				</configuration>
			</plugin>

			<!-- Include only integration tests for maven-failsafe-plugin that is 
				run in integration-test phase -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.12</version>
				<configuration>
					<excludes>
						<exclude>**/test/**/*Test.java</exclude>
					</excludes>
					<includes>
						<include>**/integrationtest/**/*Test.java</include>
					</includes>
				</configuration>
			</plugin>
			<!-- Enforce officially supported JDK and validated Maven version or higher -->
			<plugin>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.0.1</version>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireJavaVersion>
									<version>[${sap.cloud.jdk.version},2.0)</version>
								</requireJavaVersion>
								<requireMavenVersion>
									<version>[3.0.3, 4.0.0)</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- jMeter -->
			<plugin>
			    <groupId>com.lazerycode.jmeter</groupId>
			    <artifactId>jmeter-maven-plugin</artifactId>
			    <version>1.10.1</version>
			    <executions>
			        <execution>
			            <id>jmeter-tests</id>			            
			            <phase>verify</phase>			
			            <!--              
			            <phase>integration-test</phase>
			             -->
			            <goals>
			                <goal>jmeter</goal>
			            </goals>
			            <configuration>
			       			<testFilesDirectory>${project.basedir}/test/jmeter</testFilesDirectory>
                        </configuration>
			       </execution>			       					      
			    </executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!-- SonarQube -->
			    <plugin>
			        <groupId>org.sonarsource.scanner.maven</groupId>
			        <artifactId>sonar-maven-plugin</artifactId>
			        <version>3.0.1</version>
			    </plugin>
				<!-- Define the version of the Maven Plugin for SAP HANA Cloud Platform 
					we want to use -->
				<plugin>
					<groupId>com.sap.cloud</groupId>
					<artifactId>${sap.cloud.sdk.plugin}</artifactId>
					<version>${sap.cloud.sdk.version}</version>
				</plugin>

				<!-- Force m2e to ignore plugin goal that it doesn't support naturally -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-enforcer-plugin
										</artifactId>
										<versionRange>
											[0.0.1,)
										</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.sap.cloud</groupId>
										<artifactId>
											neo-javaee6-wp-maven-plugin
										</artifactId>
										<versionRange>
											[2.79.10.4,)
										</versionRange>
										<goals>
											<goal>install-sdk</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>3.0.4-SNAPSHOT</version>
				<configuration>
					<effort>Max</effort>
					<threshold>Low</threshold>
					<xmlOutput>true</xmlOutput>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.7</version>
				<configuration>
	               <formats>
	                   <format>html</format>
	                   <format>xml</format>
	               </formats>
            </configuration>
			</plugin>
		</plugins>
	</reporting>

</project>
